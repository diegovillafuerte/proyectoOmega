
package referencias;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SoapWS", targetNamespace = "http://webservices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SoapWS {


    /**
     * 
     * @param nombre
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "obtenTablasDeUsuario", targetNamespace = "http://webservices/", className = "referencias.ObtenTablasDeUsuario")
    @ResponseWrapper(localName = "obtenTablasDeUsuarioResponse", targetNamespace = "http://webservices/", className = "referencias.ObtenTablasDeUsuarioResponse")
    @Action(input = "http://webservices/SoapWS/obtenTablasDeUsuarioRequest", output = "http://webservices/SoapWS/obtenTablasDeUsuarioResponse")
    public String obtenTablasDeUsuario(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre);

    /**
     * 
     * @param password
     * @param nombre
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "valida", targetNamespace = "http://webservices/", className = "referencias.Valida")
    @ResponseWrapper(localName = "validaResponse", targetNamespace = "http://webservices/", className = "referencias.ValidaResponse")
    @Action(input = "http://webservices/SoapWS/validaRequest", output = "http://webservices/SoapWS/validaResponse")
    public Boolean valida(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param password
     * @param usuario
     * @param base
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "signIn", targetNamespace = "http://webservices/", className = "referencias.SignIn")
    @ResponseWrapper(localName = "signInResponse", targetNamespace = "http://webservices/", className = "referencias.SignInResponse")
    @Action(input = "http://webservices/SoapWS/signInRequest", output = "http://webservices/SoapWS/signInResponse")
    public Boolean signIn(
        @WebParam(name = "base", targetNamespace = "")
        String base,
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param password
     * @param name
     * @param base
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "altaUsuario", targetNamespace = "http://webservices/", className = "referencias.AltaUsuario")
    @ResponseWrapper(localName = "altaUsuarioResponse", targetNamespace = "http://webservices/", className = "referencias.AltaUsuarioResponse")
    @Action(input = "http://webservices/SoapWS/altaUsuarioRequest", output = "http://webservices/SoapWS/altaUsuarioResponse")
    public Boolean altaUsuario(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "base", targetNamespace = "")
        String base);

    /**
     * 
     * @param base
     * @param idusuario
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "obtenerTabla", targetNamespace = "http://webservices/", className = "referencias.ObtenerTabla")
    @ResponseWrapper(localName = "obtenerTablaResponse", targetNamespace = "http://webservices/", className = "referencias.ObtenerTablaResponse")
    @Action(input = "http://webservices/SoapWS/obtenerTablaRequest", output = "http://webservices/SoapWS/obtenerTablaResponse")
    public String obtenerTabla(
        @WebParam(name = "base", targetNamespace = "")
        String base,
        @WebParam(name = "idusuario", targetNamespace = "")
        String idusuario);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://webservices/", className = "referencias.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://webservices/", className = "referencias.HelloResponse")
    @Action(input = "http://webservices/SoapWS/helloRequest", output = "http://webservices/SoapWS/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param nombreTabla
     * @param esquemaTabla
     * @param idusuario
     * @return
     *     returns java.lang.Boolean
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "creaTabla", targetNamespace = "http://webservices/", className = "referencias.CreaTabla")
    @ResponseWrapper(localName = "creaTablaResponse", targetNamespace = "http://webservices/", className = "referencias.CreaTablaResponse")
    @Action(input = "http://webservices/SoapWS/creaTablaRequest", output = "http://webservices/SoapWS/creaTablaResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://webservices/SoapWS/creaTabla/Fault/ParseException")
    })
    public Boolean creaTabla(
        @WebParam(name = "esquemaTabla", targetNamespace = "")
        String esquemaTabla,
        @WebParam(name = "nombreTabla", targetNamespace = "")
        String nombreTabla,
        @WebParam(name = "idusuario", targetNamespace = "")
        int idusuario)
        throws ParseException_Exception
    ;

}
